	.TITLE	ART
	.PSECT

; Overlay #2
; Size of this overlay: 2289. words

; Overlay call
ART20::
L65634:	RETURN
;
; Overlay call
ART21::
L65636: CLR	R0
L65640: BR	L65656
;
L65642: CALL	L66110
L65646: MOV	R5, 020350
L65652: MOV	#177777, R0
L65656: MOV	R0, 066702
L65662: CALL	K54052
L65666: CALL	K26476
L65672: MOV	#000003, R0
L65676: CLR	R3
L65700: MOV	#066706, R2
L65704: CLRB	025521
L65710: JMP	K61246
;
L65714: MOV	K62374, R3		; get Mouse X
L65720: MOV	K62376, R4		; get Mouse Y
L65724: SUB	#000040, R3
L65730: SUB	#000070, R4
L65734: MOV	R3, R0
L65736: MOV	#177777, R3
L65742: INC	R3
L65744: SUB	#000030, R0
L65750: BHIS	L65742
L65752: ADD	#000030, R0
L65756: CMP	R0, #000020
L65762: BLO	L65766
L65764: RETURN
L65766: MOV	R4, R0
L65770: MOV	#177777, R4
L65774: INC	R4
L65776: SUB	#000030, R0
L66002: BHIS	L65774
L66004: ADD	#000030, R0
L66010: CMP	R0, #000020
L66014: BLO	L66020
L66016: RETURN
L66020: ASL	R4
L66022: ASL	R4
L66024: ASL	R4
L66026: ADD	R3, R4
L66030: INC	R4
L66032: MOV	066704, R0
L66036: CMP	R0, R4
L66040: BEQ	L66074
L66042: MOV	R4, -(SP)
L66044: CALL	L66372
L66050: MOV	(SP)+, R0
L66052: MOV	R0, 066704
L66056: CALL	L66372
L66062: MOV	#177777, R0
L66066: TST	(R1)
L66070: TST	(R1)
L66072: SOB	R0, L66066
L66074: CALL	K63530
L66100: CALL	K63530
L66104: JMP	@#066104
; Subroutine ??
L66110: MOV	066704, R5
L66114: DEC	R5
L66116: ASL	R5
L66120: ASL	R5
L66122: ASL	R5
L66124: ADD	#010330, R5
L66130: MOV	R5, R3
L66132: RETURN
;
; Overlay call
ART22::
L66134: MOV	#L65642, 066106
L66142: MOV	#066150, R3
L66146: BR	L66172
L66150:	.ASCII	/заливки:/
;
; Overlay call
ART23::
L66160: MOV	#067220, 066106
L66166: MOV	#066252, R3
L66172: MOV	#066543, R2
L66176: MOV	#000010, R1
L66202: MOVB	(R3)+, (R2)+
L66204: SOB	R1, L66202
L66206: MOV	#066466, R5
L66212: MOV	065276, 000012(R5)
L66220: MOV	R5, 065276
L66224: MOV	(R5), R3
L66226: MOV	000002(R5), R4
L66232: MOV	000004(R5), R1
L66236: MOV	000006(R5), R2
L66242: CALL	K13264
L66246: JMP	K63646
L66252:	.ASCII	/экрана :/
L66262: MOV	#010330, R5
L66266: MOV	#000037, R3
L66272: MOV	#000067, R4
L66276: MOV	#000004, R1
L66302: MOV	R1, -(SP)
L66304: MOV	#000010, R1
L66310: MOV	R1, -(SP)
L66312: MOV	R3, -(SP)
L66314: MOV	R4, -(SP)
L66316: MOV	#000022, R1
L66322: MOV	#000022, R2
L66326: CALL	K17276
L66332: CALL	K17720
L66336: MOV	(SP)+, R4
L66340: MOV	(SP)+, R3
L66342: ADD	#000030, R3
L66346: MOV	(SP)+, R1
L66350: SOB	R1, L66310
L66352: MOV	#000037, R3
L66356: ADD	#000030, R4
L66362: MOV	(SP)+, R1
L66364: SOB	R1, L66302
L66366: MOV	066704, R0
; Entry point
L66372: DEC	R0
L66374: MOV	R0, R3
L66376: BIC	#177770, R3
L66402: ASL	R3
L66404: ASL	R3
L66406: ASL	R3
L66410: MOV	R3, R1
L66412: ASL	R3
L66414: ADD	R1, R3
L66416: ADD	#000037, R3
L66422: MOV	R0, R4
L66424: BIC	#000007, R4
L66430: MOV	R4, R1
L66432: ASL	R4
L66434: ADD	R1, R4
L66436: ADD	#000067, R4
L66442: MOVB	#000003, 025521
L66450: DEC	R3
L66452: DEC	R4
L66454: MOV	#000024, R1
L66460: MOV	R1, R2
L66462: JMP	K17410
;
L66466:	.WORD	000020, 000040, 000330, 000200, 034340, 000000, 066262, 000000
	.WORD	000000, 000330, 000200, 000000, 004000, 004027
	.BYTE	010
	.ASCII	/Выбери текстуру заливки:/
	.EVEN
L66554:
	.WORD	000017, 000027, 000272, 000132, 065714, 004000, 000000, 177777
;
; Overlay call
ART24::
L66574: CALL	L66110
L66600: MOV	#000100, R4
L66604: MOV	#000230, R3
L66610: MOV	#000010, R1
L66614: MOV	R1, R2
L66616: CALL	K14240
L66622: BR	L66662
;
; Overlay call
ART25::
L66624: CALL	K63530
L66630: JMP	L65642
;
; Overlay call
ART26::
L66634: CALL	L66110
L66640: MOV	#000100, R4
L66644: MOV	#000230, R3
L66650: MOV	#000010, R1
L66654: MOV	R1, R2
L66656: CALL	K14060
L66662: CALL	L66110
L66666: MOV	#000207, R4
L66672: MOV	#000257, R3
L66676: JMP	K17720
L66702: .WORD	000000, 000001
L66706: MOV	030532, R0
L66712: ASL	R0
L66714: ASL	R0
L66716: ASL	R0
L66720: NEG	R0
L66722: DEC	R0
L66724: MOV	R0, 071000
L66730: ADD	#000340, R0
L66734: MOV	R0, 071046
L66740: MOV	K62374, R3		; get Mouse X
L66744: MOV	K62376, R4		; get Mouse Y
L66750: MOV	R3, R1
L66752: BIC	#177770, R1
L66756: INC	R1
L66760: CALL	K27752
L66764: CALL	K20352
L66770: ROLB	R0
L66772: SOB	R1, L66770
L66774: BHIS	L67000
L66776: RETURN
L67000: CALL	K42334
L67004: MOV	030536, R5
L67010: CLR	(R5)+
L67012: MOV	K62374, R3		; get Mouse X
L67016: MOV	K62376, R4		; get Mouse Y
L67022: TST	R3
L67024: BNE	L67030
L67026: INC	R3
L67030: MOV	#000001, R0
L67034: CLR	R1
L67036: MOV	#000200, R2
L67042: CALL	L71110
L67046: MTPS	#000340
L67052: CALL	L67240
L67056: BLO	L67064
L67060: JMP	L67212
L67064: SUB	#000010, R5
L67070: TST	000006(R5)
L67074: BEQ	L67200
L67076: MOV	(R5), R3
L67100: MOV	000002(R5), R4
L67104: MOV	000004(R5), R1
L67110: MOV	000006(R5), R2
L67114: BIC	#177760, R2
L67120: BIT	#000010, R2
L67124: BEQ	L67132
L67126: BIS	#000360, R2
L67132: CLR	R0
L67134: BIT	#000200, 000006(R5)
L67142: BNE	L67146
L67144: DEC	R0
L67146: MOV	R0, 071170
L67152: MOV	#000001, R0
L67156: BIT	#000100, 000006(R5)
L67164: BEQ	L67172
L67166: MOV	#177777, R0
L67172: CALL	L67244
L67176: BR	L67052
L67200: TST	066702
L67204: BEQ	L67212
L67206: CALL	K20032
; Entry point
L67212: MTPS	#000000
L67216: RETURN
L67220: CALL	L66110
L67224: MOV	R5, 020350
L67230: CALL	K54052
L67234: JMP	L67206
; Subroutine ??
L67240: SEC
L67242: RETURN
; Subroutine ??
L67244: MOV	R0, 071162
L67250: MOV	R3, K12042
L67254: MOV	R4, K12044
L67260: MOV	R1, 071164
L67264: MOV	R2, 071166
L67270: CLR	R2
; Entry point
L67272: MOV	R3, -(SP)
L67274: MOV	R4, -(SP)
L67276: CALL	K27752
L67302: CALL	K20352
L67306: MOV	R0, 071172
L67312: MOVB	R0, 025520
L67316: MOVB	#000010, 025521
L67324: MOV	(SP)+, R4
L67326: MOV	(SP)+, R3
L67330: MOV	R3, R0
L67332: TST	071162
L67336: BMI	L67350
L67340: BIC	#177770, R0
L67344: BEQ	L67404
L67346: BR	L67364
L67350: BIC	#177770, R0
L67354: NEG	R0
L67356: ADD	#000007, R0
L67362: BEQ	L67404
L67364: MOV	#177777, R2
L67370: MOV	R0, -(SP)
L67372: CALL	L70110
L67376: MOV	(SP)+, R0
L67400: SOB	R0, L67370
L67402: CLR	R2
L67404: MOV	R3, -(SP)
L67406: MOV	R4, -(SP)
L67410: MOV	R1, -(SP)
L67412: MOV	R2, -(SP)
L67414: MOV	R1, R0
L67416: DEC	R0
L67420: CMP	R0, #000010
L67424: BLO	L67432
L67426: MOV	#000010, R1
L67432: TST	071162
L67436: BPL	L67470
L67440: MOV	R3, R0
L67442: BIC	#177770, R0
L67446: INC	R0
L67450: SUB	R1, R0
L67452: BHIS	L67460
L67454: ADD	R1, R0
L67456: MOV	R0, R1
L67460: MOV	R3, R0
L67462: INC	R0
L67464: SUB	R1, R0
L67466: MOV	R0, R3
L67470: BIC	#177770, R3
L67474: ASL	R3
L67476: MOV	R1, R0
L67500: DEC	R0
L67502: ASL	R0
L67504: ASL	R0
L67506: ASL	R0
L67510: ASL	R0
L67512: ADD	R0, R3
L67514: ADD	#011622, R3
L67520: INC	R3
L67522: CLR	R1
L67524: BISB	(R3), R1
L67526: MOV	071172, R0
L67532: BICB	R1, R0
L67534: CMPB	R0, R1
L67536: MFPS	023722
L67542: MOV	(SP)+, R2
L67544: MOV	(SP)+, R1
L67546: MOV	(SP)+, R4
L67550: MOV	(SP)+, R3
L67552: MOV	R0, -(SP)
L67554: TST	071170
L67560: BNE	L67660
L67562: MTPS	023722
L67566: BEQ	L67652
L67570: MOV	071162, R0
L67574: BMI	L67606
L67576: BITB	#000200, 025520
L67604: BR	L67614
L67606: BITB	#000001, 025520
L67614: BNE	L67652
L67616: MOV	R3, -(SP)
L67620: MOV	R4, -(SP)
L67622: MOV	R1, -(SP)
L67624: MOV	R2, -(SP)
L67626: CLR	R1
L67630: CLR	R2
L67632: NEG	R0
L67634: ADD	R0, R3
L67636: CALL	L71110
L67642: MOV	(SP)+, R2
L67644: MOV	(SP)+, R1
L67646: MOV	(SP)+, R4
L67650: MOV	(SP)+, R3
L67652: MOV	#177777, 071170
L67660: MOVB	025520, R0
L67664: BNE	L67756
L67666: MOVB	025521, R0
L67672: CMPB	R0, #000010
L67676: BNE	L67756
L67700: MOV	R2, R0
L67702: DEC	R0
L67704: BEQ	L67726
L67706: CALL	L70510
L67712: MOV	R3, K12042
L67716: MOV	R4, K12044
L67722: MOV	#000001, R2
L67726: MOV	R3, -(SP)
L67730: CALL	K27752
L67734: CALL	K20406
L67740: MOV	(SP)+, R3
L67742: SUB	#000010, R1
L67746: BHIS	L67752
L67750: CLR	R1
L67752: MOV	(SP)+, R0
L67754: BR	L70062
L67756: MOV	(SP)+, R0
L67760: MTPS	023722
L67764: BNE	L70024
L67766: MOV	R2, R0
L67770: BEQ	L70004
L67772: CALL	L70510
L67776: CALL	L70602
L70002: CLR	R2
L70004: MOVB	025521, R0
L70010: SUB	R0, R1
L70012: BHIS	L70016
L70014: RETURN
L70016: BNE	L70022
L70020: RETURN
L70022: BR	L70062
L70024: CALL	L70110
L70030: BNE	L70024
L70032: MOV	R3, -(SP)
L70034: CALL	K27752
L70040: CALL	K25354
L70044: CALL	K20430
L70050: MOV	(SP)+, R3
L70052: MOV	R2, R0
L70054: INC	R0
L70056: BNE	L70062
L70060: RETURN
L70062: CALL	L70544
L70066: BLO	L70074
L70070: JMP	L67272
L70074: MOV	R2, R0
L70076: DEC	R0
L70100: BNE	L70106
L70102: JMP	L70602
L70106: RETURN
; Subroutine ??
L70110: TST	071162
L70114: BPL	L70122
L70116: JMP	L70336
L70122: MOV	R2, R0
L70124: INC	R0
L70126: BNE	L70152
L70130: CALL	K25354
L70134: ASLB	025520
L70140: SEC
L70142: ROLB	R0
L70144: CALL	K25354
L70150: BR	L70330
L70152: DEC	R0
L70154: BNE	L70230
L70156: CALL	K25354
L70162: ASLB	025520
L70166: BHIS	L70200
L70170: ROLB	R0
L70172: CALL	K25354
L70176: BR	L70272
L70200: ROLB	R0
L70202: CALL	K25354
L70206: CALL	L70510
L70212: MOV	R3, K12042
L70216: MOV	R4, K12044
L70222: MOV	#000001, R2
L70226: BR	L70322
L70230: CALL	K25354
L70234: ASLB	025520
L70240: BLO	L70252
L70242: ROLB	R0
L70244: CALL	K25354
L70250: BR	L70322
L70252: ROLB	R0
L70254: CALL	K25354
L70260: CALL	L70510
L70264: CALL	L70602
L70270: CLR	R2
L70272: CLR	R0
L70274: MOV	R0, 071164
L70300: MOV	R1, R0
L70302: DEC	R1
L70304: CMP	R0, #000002
L70310: BHIS	L70330
L70312: MOV	#177777, R2
L70316: CLR	R1
L70320: BR	L70330
L70322: TST	R1
L70324: BEQ	L70330
L70326: DEC	R1
L70330: DECB	025521
L70334: RETURN
; Entry point
L70336: MOV	R2, R0
L70340: INC	R0
L70342: BNE	L70366
L70344: CALL	K25354
L70350: ASRB	025520
L70354: SEC
L70356: RORB	R0
L70360: CALL	K25354
L70364: BR	L70330
L70366: DEC	R0
L70370: BNE	L70444
L70372: CALL	K25354
L70376: ASRB	025520
L70402: BHIS	L70414
L70404: RORB	R0
L70406: CALL	K25354
L70412: BR	L70272
L70414: RORB	R0
L70416: CALL	K25354
L70422: CALL	L70510
L70426: MOV	R3, K12042
L70432: MOV	R4, K12044
L70436: MOV	#000001, R2
L70442: BR	L70322
L70444: CALL	K25354
L70450: ASRB	025520
L70454: BLO	L70466
L70456: RORB	R0
L70460: CALL	K25354
L70464: BR	L70322
L70466: RORB	R0
L70470: CALL	K25354
L70474: CALL	L70510
L70500: CALL	L70602
L70504: CLR	R2
L70506: BR	L70272
; Entry point
L70510: BIC	#000007, R3
L70514: MOVB	025521, R0
L70520: TST	071162
L70524: BMI	L70536
L70526: ADD	#000010, R3
L70532: SUB	R0, R3
L70534: RETURN
L70536: ADD	R0, R3
L70540: DEC	R3
L70542: RETURN
; Subroutine ??
L70544: TST	071162
L70550: BMI	L70570
L70552: BIC	#000007, R3
L70556: ADD	#000010, R3
L70562: CMP	#000477, R3
L70566: RETURN
L70570: BIS	#000007, R3
L70574: SUB	#000010, R3
L70600: RETURN
; Subroutine ??
L70602: MOV	R3, -(SP)
L70604: MOV	R4, -(SP)
L70606: MOV	R1, -(SP)
L70610: MOV	R2, -(SP)
L70612: MOV	R3, R1
L70614: MOV	R4, R2
L70616: MOV	K12042, R3
L70622: MOV	K12044, R4
L70626: TST	071162
L70632: BMI	L70642
L70634: MOV	R1, R0
L70636: SUB	R3, R0
L70640: BR	L70646
L70642: MOV	R3, R0
L70644: SUB	R1, R0
L70646: BEQ	L70740
L70650: MOV	(SP)+, R2
L70652: MOV	(SP)+, R1
L70654: MOV	R1, -(SP)
L70656: MOV	R2, -(SP)
L70660: MOV	R1, R2
L70662: MOV	R0, R1
L70664: TST	071166
L70670: BEQ	L70730
L70672: TST	R2
L70674: BNE	L70712
L70676: MOV	071164, R0
L70702: TST	R0
L70704: BEQ	L70730
L70706: CMP	R0, R1
L70710: BNE	L70730
L70712: MOV	071166, R0
L70716: DEC	R0
L70720: BEQ	L70734
L70722: CALL	L70752
L70726: BR	L70740
L70730: CALL	L70752
L70734: CALL	L71036
L70740: MOV	(SP)+, R2
L70742: MOV	(SP)+, R1
L70744: MOV	(SP)+, R4
L70746: MOV	(SP)+, R3
L70750: RETURN
; Subroutine ??
L70752: MOV	R3, -(SP)
L70754: MOV	R4, -(SP)
L70756: MOV	R4, R0
L70760: CMP	R0, #000030
L70764: BEQ	L71030
L70766: CMP	R0, #000340
L70772: BLO	L71004
L70774: DEC	R0
L70776: CMP	R0, #177747
L71002: BEQ	L71022
L71004: DEC	R4
L71006: MOV	071162, R0
L71012: MOV	#177777, R2
L71016: CALL	L71110
L71022: MOV	(SP)+, R4
L71024: MOV	(SP)+, R3
L71026: RETURN
L71030: CLR	R0
L71032: MOV	R0, R4
L71034: BR	L70774
; Subroutine ??
L71036: MOV	R3, -(SP)
L71040: MOV	R4, -(SP)
L71042: MOV	R4, R0
L71044: CMP	R0, #000337
L71050: BEQ	L71102
L71052: CMP	R0, #177777
L71056: BNE	L71064
L71060: MOV	#000027, R4
L71064: INC	R4
L71066: MOV	071162, R0
L71072: MOV	#000201, R2
L71076: CALL	L71110
L71102: MOV	(SP)+, R4
L71104: MOV	(SP)+, R3
L71106: RETURN
; Subroutine ??
L71110: MOV	R2, -(SP)
L71112: MOV	R3, (R5)+
L71114: MOV	R4, (R5)+
L71116: MOV	R1, (R5)+
L71120: ASL	R0
L71122: ASL	R0
L71124: ASL	R0
L71126: ASL	R0
L71130: BIC	#177617, R0
L71134: BIC	#177560, R2
L71140: BIS	R0, R2
L71142: MOV	R2, (R5)+
L71144: CMP	#140000, R5
L71150: BHIS	L71156
L71152: SUB	#000010, R5
L71156: MOV	(SP)+, R2
L71160: RETURN
	.BLKW	5
;
; Overlay call
ART27::
L71174: TST	053066
L71200: BNE	L71212
L71202: TST	053070
L71206: BNE	L71212
L71210: RETURN
L71212: CLR	053066
L71216: CLR	053070
L71222: CALL	K21254
; Entry point
L71226: MOV	053106, R3
L71232: MOV	053110, R4
L71236: MOV	053112, R1
L71242: MOV	053114, R2
L71246: CALL	K13644
L71252: MOV	053116, R3
L71256: MOV	053120, R4
L71262: MOV	053122, R1
L71266: MOV	053124, R2
L71272: CALL	K13644
L71276: CALL	L72076
L71302: JMP	L72222
;
; Overlay call
ART28::
L71306: MOV	#071316, R3
L71312: JMP	L71702
L71316: MOV	053066, R3
L71322: MOV	053072, R1
L71326: TST	R3
L71330: BNE	L71334
L71332: RETURN
L71334: MOV	R1, R0
L71336: CALL	L72010
L71342: NEG	R0
L71344: ADD	R3, R0
L71346: BLO	L71352
L71350: CLR	R0
L71352: MOV	R0, R3
L71354: BR	L71444
;
; Overlay call
ART29::
L71356: MOV	#071366, R3
L71362: JMP	L71702
L71366: MOV	053066, R3
L71372: MOV	053072, R1
L71376: MOV	R3, R0
L71400: ADD	R1, R0
L71402: CMP	R0, #000500
L71406: BNE	L71412
L71410: RETURN
L71412: MOV	R1, R0
L71414: CALL	L72010
L71420: ADD	R3, R0
L71422: MOV	R0, R3
L71424: ADD	R1, R0
L71426: CMP	R0, #000500
L71432: BLO	L71444
L71434: MOV	#000500, R0
L71440: SUB	R1, R0
L71442: MOV	R0, R3
L71444: MOV	R3, 053066
L71450: CALL	K21254
L71454: MOV	053106, R3
L71460: MOV	053110, R4
L71464: MOV	053112, R1
L71470: MOV	053114, R2
L71474: CALL	K13644
L71500: JMP	L72076
;
; Overlay call
ART30::
L71504: MOV	#071514, R3
L71510: JMP	L71702
L71514: MOV	053070, R4
L71520: MOV	053074, R2
L71524: TST	R4
L71526: BNE	L71532
L71530: RETURN
L71532: MOV	R2, R0
L71534: CALL	L72010
L71540: NEG	R0
L71542: ADD	R4, R0
L71544: BLO	L71550
L71546: CLR	R0
L71550: MOVB	R0, R4
L71552: BR	L71642
;
; Overlay call
ART31::
L71554: MOV	#071564, R3
L71560: JMP	L71702
L71564: MOV	053070, R4
L71570: MOV	053074, R2
L71574: MOV	R4, R0
L71576: ADD	R2, R0
L71600: CMP	R0, #000310
L71604: BNE	L71610
L71606: RETURN
L71610: MOV	R2, R0
L71612: CALL	L72010
L71616: ADD	R4, R0
L71620: MOV	R0, R4
L71622: ADD	R2, R0
L71624: CMP	R0, #000310
L71630: BLO	L71642
L71632: MOV	#000310, R0
L71636: SUB	R2, R0
L71640: MOV	R0, R4
L71642: MOV	R4, 053070
L71646: CALL	K21254
L71652: MOV	053116, R3
L71656: MOV	053120, R4
L71662: MOV	053122, R1
L71666: MOV	053124, R2
L71672: CALL	K13644
L71676: JMP	L72222
; Entry point
L71702: MOV	R3, -(SP)
L71704: CALL	(R3)
L71706: MOV	(SP)+, R3
L71710: MOVB	#000024, 025521
L71716: CALL	K25244
L71722: CALL	L72050
L71726: CALL	K12054
L71732: CALL	K25244
L71736: NOP
L71740: DECB	025521
L71744: BNE	L71736
L71746: MOVB	#000005, 025521
L71754: CALL	K25244
L71760: CALL	K13110
L71764: CALL	L72050
L71770: CALL	K25244
L71774: MOV	R3, -(SP)
L71776: CALL	K25244
L72002: MOV	(SP)+, R3
L72004: CALL	(R3)
L72006: BR	L71722
; Subroutine ??
L72010: ASR	R0
L72012: ASR	R0
L72014: CMP	023120, #000002
L72022: BNE	L72032
L72024: BIC	#000003, R0
L72030: RETURN
L72032: CMP	023120, #000004
L72040: BNE	L72046
L72042: BIC	#000001, R0
L72046: RETURN
; Subroutine ??
L72050: CALL	K45776			; Read input and set input bits
L72054: MOV	K46222, R0		; get input bits
L72060: BIT	#000020, R0
L72064: BEQ	L72070
L72066: RETURN
L72070: MOV	(SP)+, R3
L72072: RETURN
L72074: JMP	(R3)
; Subroutine ??
L72076: MOV	053066, R1
L72102: MOV	#000334, R0
L72106: CALL	L72412
L72112: MOV	#000500, R0
L72116: CALL	L72344
L72122: MOV	R0, R3
L72124: ADD	#000030, R3
L72130: MOV	#000020, R4
L72134: MOV	R3, -(SP)
L72136: MOV	R4, -(SP)
L72140: MOV	053072, R1
L72144: MOV	#000334, R0
L72150: CALL	L72412
L72154: MOV	#000500, R0
L72160: CALL	L72344
L72164: MOV	R0, R1
L72166: MOV	#000015, R2
L72172: MOV	(SP)+, R4
L72174: MOV	(SP)+, R3
L72176: MOV	R3, 053106
L72202: MOV	R4, 053110
L72206: MOV	R1, 053112
L72212: MOV	R2, 053114
L72216: JMP	K13644
; Subroutine ??
L72222: MOV	053070, R1
L72226: MOV	#000214, R0
L72232: CALL	L72412
L72236: MOV	#000310, R0
L72242: CALL	L72344
L72246: ADD	#000050, R0
L72252: MOV	R0, R4
L72254: CLR	R3
L72256: MOV	R3, -(SP)
L72260: MOV	R4, -(SP)
L72262: MOV	053074, R1
L72266: MOV	#000214, R0
L72272: CALL	L72412
L72276: MOV	#000310, R0
L72302: CALL	L72344
L72306: MOV	R0, R2
L72310: MOV	#000015, R1
L72314: MOV	(SP)+, R4
L72316: MOV	(SP)+, R3
L72320: MOV	R3, 053116
L72324: MOV	R4, 053120
L72330: MOV	R1, 053122
L72334: MOV	R2, 053124
L72340: JMP	K13644
; Subroutine ??
L72344: TST	R0
L72346: BNE	L72354
L72350: MOV	R3, R0
L72352: RETURN
L72354: MOV	R1, -(SP)
L72356: MOV	R0, R1
L72360: MOV	#177777, R0
L72364: INC	R0
L72366: SUB	R1, R3
L72370: SBC	R2
L72372: BHIS	L72364
L72374: ADD	R1, R3
L72376: ASL	R3
L72400: SUB	R1, R3
L72402: BLO	L72406
L72404: INC	R0
L72406: MOV	(SP)+, R1
L72410: RETURN
; Subroutine ??
L72412: CLR	R3
L72414: CLR	R2
L72416: MOV	#000010, R5
L72422: ROR	R0
L72424: BHIS	L72432
L72426: ADD	R1, R3
L72430: ADC	R2
L72432: ASL	R1
L72434: SOB	R5, L72422
L72436: RETURN
;
; Overlay call
ART32::
L72440: MOVB	025521, R0
L72444: INC	R0
L72446: ASL	R0
L72450: CMP	R0, #000005
L72454: BLO	L72462
L72456: ADD	#000002, R0
L72462: MOV	R0, 053054
L72466: MOVB	R0, 025521
L72472: MOV	023120, R0
L72476: CMPB	R0, 025521
L72502: BNE	L72506
L72504: RETURN
L72506: CALL	L72634
L72512: MOV	K62374, R3		; get Mouse X
L72516: MOV	K62376, R4		; get Mouse Y
L72522: MOV	R3, -(SP)
L72524: MOV	R4, -(SP)
L72526: MOV	053076, R3
L72532: MOV	053100, R4
L72536: MOV	053102, R1
L72542: MOV	053104, R2
L72546: ASR	R1
L72550: ASR	R2
L72552: ADD	R1, R3
L72554: ADD	R2, R4
L72556: MOV	R3, K62374		; set Mouse X
L72562: MOV	R4, K62376		; set Mouse Y
L72566: MOV	053054, R0
L72572: CALL	L74322
L72576: MOV	(SP)+, R3
L72600: MOV	(SP)+, R4
L72602: MOV	R3, K62374		; set Mouse X
L72606: MOV	R4, K62376		; set Mouse Y
L72612: CLR	R0
L72614: MOV	R0, 023122
L72620: CALL	K21254
L72624: CALL	L71226
L72630: MOV	023120, R0
; Entry point
L72634: MOV	#000001, R3
L72640: MOV	#000003, R4
L72644: MOV	#000022, R1
L72650: MOV	#000012, R2
L72654: CMP	R0, #000002
L72660: BEQ	L72700
L72662: MOV	#000024, R3
L72666: CMP	R0, #000004
L72672: BEQ	L72700
L72674: MOV	#000047, R3
L72700: JMP	K13644
;
; Overlay call
ART33::
L72704: MOVB	025521, R0
L72710: SUB	#000003, R0
L72714: MOV	R0, 053060
L72720: MOVB	R0, 025521
L72724: MOV	053056, R0
L72730: CMPB	R0, 025521
L72734: BNE	L72740
L72736: RETURN
L72740: CALL	L72754
L72744: MOV	053060, R0
L72750: MOV	R0, 053056
; Entry point
L72754: MOV	#000145, R3
L72760: MOV	#000003, R4
L72764: MOV	#000031, R1
L72770: MOV	#000012, R2
L72774: TST	R0
L72776: BEQ	L73024
L73000: MOV	#000176, R3
L73004: MOV	#000052, R1
L73010: DEC	R0
L73012: BEQ	L73024
L73014: MOV	#000251, R3
L73020: MOV	#000061, R1
L73024: JMP	K13644
;
; Overlay call
; Выбрано увеличение x2 / x4 / x8
ART34::
L73030: MOVB	025521, R0
L73034: INC	R0
L73036: ASL	R0
L73040: CMP	R0, #000005
L73044: BLO	L73052
L73046: ADD	#000002, R0
L73052: MOV	R0, 053054
L73056: CALL	K54052
L73062: CALL	K26476
L73066: MOV	#000004, R0
L73072: CLR	R3
L73074: MOV	#073104, R2
L73100: JMP	K61246
;
L73104: MOV	#000001, R0
L73110: CALL	K42704
L73114: MOV	#052456, R5
L73120: CALL	K63646
L73124: MOV	053054, R0
L73130: CALL	L74322
L73134: CLR	023122
L73140: CALL	K21254
L73144: CALL	L72076
L73150: CALL	L72222
L73154: MOV	023120, R0
L73160: CALL	L72634
L73164: MOV	053056, R0
L73170: CALL	L72754
; Entry point
L73174: MOV	#177777, 053062
L73202: MOV	#177777, 053064
L73210: MOV	#000002, R0
L73214: CALL	K62000
L73220: CALL	K12054
L73224: CALL	K61754			; Clean input buffer
L73230: CALL	K45776			; Read input and set input bits
L73234: MOV	K46222, R0		; get input bits
L73240: BIT	#000020, R0
L73244: BNE	L73310
L73246: MOV	#177777, 053062
L73254: MOV	#177777, 053064
L73262: CALL	K62036			; Process input bits into X/Y change
L73266: NOP
L73270: CALL	K13110
L73274: CALL	L73536
L73300: BNE	L73370
L73302: CALL	K12054
L73306: BR	L73230
L73310: CALL	L74740
L73314: MOV	053062, R1
L73320: MOV	053064, R2
L73324: SUB	R1, R3
L73326: BNE	L73334
L73330: SUB	R2, R4
L73332: BEQ	L73262
L73334: NOP
L73336: CALL	K13110
L73342: CALL	K42334
L73346: CALL	L73622
L73352: MOV	R3, 053062
L73356: MOV	R4, 053064
L73362: CALL	K12054
L73366: BR	L73262
L73370: CLR	R0
L73372: CALL	K62000
L73376: CALL	K12054
L73402: CALL	K61754			; Clean input buffer
L73406: CALL	K45776			; Read input and set input bits
L73412: MOV	K46222, R0		; get input bits
L73416: BIT	#000020, R0
L73422: BNE	L73476
L73424: CALL	K62036			; Process input bits into X/Y change
L73430: NOP
L73432: CALL	K61706
L73436: CALL	K13110
L73442: CMP	065276, #052456
L73450: BNE	L73464
L73452: CALL	L73536
L73456: BNE	L73464
L73460: JMP	L73174
L73464: CALL	K12054
L73470: CALL	K62414
L73474: BR	L73406
L73476: CALL	K61700
L73502: CALL	K13110
L73506: CALL	K62652
L73512: CMP	065276, #052456
L73520: BNE	L73376
L73522: CALL	L73536
L73526: BNE	L73534
L73530: JMP	L73174
L73534: BR	L73376
; Subroutine ??
L73536: MOV	053076, R3
L73542: MOV	053100, R4
L73546: MOV	053102, R1
L73552: MOV	053104, R2
L73556: DEC	R3
L73560: DEC	R4
L73562: INC	R1
L73564: INC	R1
L73566: INC	R2
L73570: INC	R2
L73572: JMP	K63554
;
; Overlay call
; Выбрано "Сетка" в меню "Увелич."
ART35::
L73576: COM	023124
;
; Overlay call
ART36::
L73602: MOV	023124, R0
L73606: MOV	#000202, R3
L73612: MOV	#000102, R4
L73616: JMP	K17154
; Subroutine ??
L73622: CALL	L74740
L73626: BHIS	L73632
L73630: RETURN
L73632: MOV	R3, -(SP)
L73634: MOV	R4, -(SP)
L73636: MOV	R3, R0
L73640: BIC	#177770, R0
L73644: MOV	R0, -(SP)
L73646: CALL	K30060
L73652: MOV	#000200, R5
L73656: MOV	(SP)+, R0
L73660: BEQ	L73666
L73662: ASR	R5
L73664: SOB	R0, L73662
L73666: MTPS	#000340
L73672: BIS	#000340, 025474
L73700: BIS	#000340, 025500
L73706: BIC	#000140, 025506
L73714: MOV	025506, @#177400
L73722: MOVB	(R3), R4
L73724: MOV	053056, R0
L73730: BNE	L73736
L73732: BISB	R5, (R3)
L73734: BR	L73750
L73736: DEC	R0
L73740: BNE	L73746
L73742: BICB	R5, (R3)
L73744: BR	L73750
L73746: XOR	R5, (R3)
L73750: BITB	R5, (R3)
L73752: MFPS	023722
L73756: CMPB	R4, (R3)+
L73760: CALL	K25354
L73764: CALL	K22642
L73770: BIS	#000140, 025506
L73776: MOV	025506, @#177400
L74004: MTPS	#000000
L74010: BIC	#000340, 025474
L74016: BIC	#000340, 025500
L74024: MOV	R0, 023126
L74030: MOV	K62374, R3		; get Mouse X
L74034: MOV	K62376, R4		; get Mouse Y
L74040: CMP	023120, #000002
L74046: BNE	L74146
L74050: CALL	K25354
L74054: BEQ	L74144
L74056: BIC	#000001, R3
L74062: BIC	#000001, R4
L74066: MOV	R3, R0
L74070: BIC	#177770, R0
L74074: CALL	K27752
L74100: MOV	#000300, R5
L74104: ASR	R0
L74106: BEQ	L74134
L74110: MOV	#000060, R5
L74114: DEC	R0
L74116: BEQ	L74134
L74120: MOV	#000014, R5
L74124: DEC	R0
L74126: BEQ	L74134
L74130: MOV	#000003, R5
L74134: MOV	023126, R0
L74140: CALL	K22726
L74144: BR	L74312
L74146: CMP	023120, #000004
L74154: BNE	L74232
L74156: CALL	K25354
L74162: BEQ	L74312
L74164: BIC	#000003, R3
L74170: BIC	#000003, R4
L74174: MOV	R3, R0
L74176: BIC	#177770, R0
L74202: CALL	K27752
L74206: MOV	#000360, R5
L74212: TST	R0
L74214: BEQ	L74220
L74216: COMB	R5
L74220: MOV	023126, R0
L74224: CALL	K23000
L74230: BR	L74312
L74232: CALL	K25354
L74236: BEQ	L74312
L74240: BIC	#000007, R3
L74244: BIC	#000007, R4
L74250: CALL	K27752
L74254: INC	R3
L74256: MOV	023126, R0
L74262: COM	023722
L74266: ASR	023722
L74272: ASR	023722
L74276: ASR	023722
L74302: CALL	K23130
L74306: CALL	K23052
L74312: MOV	(SP)+, R4
L74314: MOV	(SP)+, R3
L74316: TST	R0
L74320: RETURN
; Subroutine ??
L74322: CALL	K25354
L74326: MOV	023120, R0
L74332: DEC	R0
L74334: BNE	L74370
L74336: MOV	030532, R0
L74342: ASL	R0
L74344: ASL	R0
L74346: ASL	R0
L74350: SUB	#000030, R0
L74354: MOV	K62374, R3		; get Mouse X
L74360: MOV	K62376, R4		; get Mouse Y
L74364: ADD	R0, R4
L74366: BR	L74400
L74370: CALL	L74740
L74374: BHIS	L74400
L74376: RETURN
L74400: CALL	K25354
L74404: MOV	R0, 023120
L74410: MOV	053102, R1
L74414: MOV	053104, R2
L74420: MOV	R1, R0
L74422: CALL	L75074
L74426: MOV	R5, R1
L74430: MOV	R2, R0
L74432: CALL	L75074
L74436: MOV	R5, R2
L74440: MOV	R1, 053072
L74444: MOV	R2, 053074
L74450: MOV	R1, R0
L74452: ASR	R0
L74454: NEG	R0
L74456: ADD	R3, R0
L74460: BLO	L74464
L74462: CLR	R0
L74464: CALL	L74702
L74470: MOV	R0, 025522
L74474: ADD	R1, R0
L74476: CMP	R0, #000500
L74502: BLO	L74516
L74504: SUB	#000500, R0
L74510: NEG	R0
L74512: ADD	R0, 025522
L74516: MOV	R2, R0
L74520: ASR	R0
L74522: NEG	R0
L74524: ADD	R4, R0
L74526: BLO	L74532
L74530: CLR	R0
L74532: CALL	L74702
L74536: MOV	R0, 025524
L74542: ADD	R2, R0
L74544: BLO	L74554
L74546: CMP	R0, #000310
L74552: BLO	L74566
L74554: SUB	#000310, R0
L74560: NEG	R0
L74562: ADD	R0, 025524
L74566: MOV	025522, 053066
L74574: MOV	025524, 053070
L74602: SUB	025522, R3
L74606: SUB	025524, R4
L74612: MOV	R3, R0
L74614: CALL	L75120
L74620: MOV	R0, R3
L74622: MOV	023120, R0
L74626: ASR	R0
L74630: ADD	R0, R3
L74632: MOV	R4, R0
L74634: CALL	L75120
L74640: MOV	R0, R4
L74642: MOV	023120, R0
L74646: ASR	R0
L74650: ADD	R0, R4
L74652: MOV	053076, R1
L74656: MOV	053100, R2
L74662: ADD	R1, R3
L74664: ADD	R2, R4
L74666: MOV	R3, K62374		; set Mouse X
L74672: MOV	R4, K62376		; set Mouse Y
L74676: TST	R0
L74700: RETURN
; Subroutine ??
L74702: CMP	023120, #000002
L74710: BNE	L74720
L74712: BIC	#000003, R0
L74716: RETURN
L74720: CMP	023120, #000004
L74726: BEQ	L74732
L74730: RETURN
L74732: BIC	#000001, R0
L74736: RETURN
; Subroutine ??
L74740: MOV	053076, R3
L74744: MOV	053100, R4
L74750: MOV	053102, R1
L74754: MOV	053104, R2
L74760: MOV	K62374, R0		; get Mouse X
L74764: SUB	R3, R0
L74766: BHIS	L74772
L74770: RETURN
L74772: MOV	R0, R3
L74774: MOV	R1, R0
L74776: DEC	R0
L75000: CMP	R0, R3
L75002: BHIS	L75006
L75004: RETURN
L75006: MOV	K62376, R0		; get Mouse Y
L75012: SUB	R4, R0
L75014: BHIS	L75020
L75016: RETURN
L75020: MOV	R0, R4
L75022: MOV	R2, R0
L75024: DEC	R0
L75026: CMP	R0, R4
L75030: BHIS	L75034
L75032: RETURN
L75034: MOV	R3, R0
L75036: CALL	L75074
L75042: MOV	R5, R3
L75044: MOV	R4, R0
L75046: CALL	L75074
L75052: MOV	R5, R4
L75054: MOV	053066, R1
L75060: MOV	053070, R2
L75064: ADD	R1, R3
L75066: ADD	R2, R4
L75070: TST	R0
L75072: RETURN
; Subroutine ??
L75074: MOV	R1, -(SP)
L75076: MOV	023120, R1
L75102: MOV	#177777, R5
L75106: INC	R5
L75110: SUB	R1, R0
L75112: BHIS	L75106
L75114: MOV	(SP)+, R1
L75116: RETURN
; Subroutine ??
L75120: MOV	R1, -(SP)
L75122: MOV	R5, -(SP)
L75124: MOV	R0, R1
L75126: MOV	023120, R5
L75132: CLR	R0
L75134: ADD	R1, R0
L75136: SOB	R5, L75134
L75140: MOV	(SP)+, R5
L75142: MOV	(SP)+, R1
L75144: RETURN
L75146: MOV	#177777, R0
L75152: BR	L75156
L75154: CLR	R0
L75156: MOV	R0, 060502
L75162: CLR	056110
L75166: CALL	K54052
L75172: MOV	056146, R3
L75176: MOV	056150, R3
L75202: MOV	056152, R1
L75206: MOV	056154, R2
L75212: CALL	K60404
L75216: MOV	056116, 060472
L75224: MOV	056120, 060474
L75232: MOV	056122, 060476
L75240: MOV	056124, 060500
L75246: MOV	#177777, 056114
L75254: CALL	K54134
L75260: CLR	056106
L75264: CALL	K53126
L75270: CALL	K54052
L75274: CALL	K26476
L75300: MOV	060502, R0
L75304: TST	R0
L75306: BEQ	L75314
L75310: CALL	K54564
L75314: MOV	056146, R3
L75320: MOV	056150, R4
L75324: MOV	056152, R1
L75330: MOV	056154, R2
L75334: CALL	K60404
L75340: MOV	030536, R3
;
; Overlay call
ART37::
L75344: RETURN

; Overlay call
; Выбран один из пяти пунктов "Вывод N x N" в меню "Печать", N = 1..5
ART38::
L75346: MOV	#000002, R0
L75352: CALL	K42704
L75356: MOVB	025521, R0
L75362: INC	R0
L75364: BR	L75370

; Overlay call
; Выбрано "Вывод  полутон." в меню "Печать"
ART39::
L75366: CLR	R0
L75370: MOV	R0, -(SP)
L75372: CALL	K54052
L75376: CALL	K26476
L75402: MOV	#034000, R0
L75406: CALL	K25024
L75412: MOV	(SP)+, R0
L75414: MOV	SP, 023722
L75420: MOV	R0, -(SP)
L75422: CALL	K37642
L75426: INC	040306
L75432: BIC	#177774, 040306
L75440: CLR	025514
L75444: MOV	#000033, R0		; 1Bh
L75450: CALL	K65356			; Send to printer
L75454: MOV	#000100, R0		; 40h = '@'
L75460: CALL	K65356			; Send to printer
L75464: MOV	#000033, R0		; 1Bh
L75470: CALL	K65356			; Send to printer
L75474: MOV	#000063, R0		; 33h
L75500: CALL	K65356			; Send to printer
L75504: MOV	#000003, R0
L75510: TST	040276
L75514: BEQ	L75520
L75516: DEC	R0
L75520: MOV	(SP)+, R2
L75522: MOV	R2, -(SP)
L75524: BNE	L75532
L75526: MOV	#000003, R2
L75532: CLR	-(SP)
L75534: ADD	R0, (SP)
L75536: SOB	R2, L75534
L75540: MOV	(SP)+, R0
L75542: CALL	K65356			; Send to printer
L75546: CLR	R3
L75550: CLR	R4
L75552: TST	040300
L75556: BEQ	L75564
L75560: MOV	#000307, R4
L75564: MOV	(SP)+, R2
; Entry point
L75566: TST	025514
L75572: BEQ	L75600
L75574: JMP	L76114
L75600: MOV	040272, R1
L75604: BEQ	L75620
L75606: MOV	#000040, R0		; 20h = space
L75612: CALL	K65356			; Send to printer
L75616: SOB	R1, L75606
L75620: MOV	#000033, R0		; 1Bh
L75624: CALL	K65356			; Send to printer
L75630: MOV	#000113, R0
L75634: TST	040276
L75640: BEQ	L75644
L75642: INC	R0
L75644: CALL	K65356			; Send to printer
L75650: CLR	R0
L75652: BISB	040274, R0
L75656: CALL	K65356			; Send to printer
L75662: CLR	R0
L75664: BISB	040275, R0
L75670: CALL	K65356			; Send to printer
L75674: MOV	R3, -(SP)
L75676: MOV	R4, -(SP)
L75700: MOV	R2, -(SP)
L75702: BEQ	L75720
L75704: CALL	L76200
L75710: CALL	L76150
L75714: SOB	R1, L75710
L75716: BR	L75746
L75720: CALL	L76414
L75724: MOVB	(R1)+, R0
L75726: CALL	L76150
L75732: MOVB	(R1)+, R0
L75734: CALL	L76150
L75740: MOVB	(R1)+, R0
L75742: CALL	L76150
L75746: TST	040300
L75752: BNE	L75776
L75754: INC	R3
L75756: CMP	#000500, R3		; 320.
L75762: BEQ	L76014
L75764: MOV	(SP)+, R2
L75766: MOV	(SP)+, R4
L75770: MOV	(SP)+, R3
L75772: INC	R3
L75774: BR	L75674
L75776: TST	R4
L76000: BEQ	L76014
L76002: MOV	(SP)+, R2
L76004: MOV	(SP)+, R4
L76006: MOV	(SP)+, R3
L76010: DEC	R4
L76012: BR	L75674
;
L76014: MOV	(SP)+, R2
L76016: MOV	(SP)+, R4
L76020: MOV	(SP)+, R3
L76022: MOV	#000015, R0		; 0Dh
L76026: CALL	K65356			; Send to printer
L76032: MOVB	#000012, R0		; 0Ah
L76036: TST	040304
L76042: BEQ	L76050
L76044: CALL	K65356			; Send to printer
L76050: TST	040300
L76054: BNE	L76074
L76056: CLR	R3
L76060: INC	R4
L76062: CMP	R4, #000310
L76066: BHIS	L76114
L76070: JMP	L75566
L76074: MOV	#000307, R4
L76100: INC	R3
L76102: CMP	R3, #000500		; 320.
L76106: BHIS	L76114
L76110: JMP	L75566
; Entry point
L76114: CLR	025514
L76120: MOV	#000033, R0		; 1Bh
L76124: CALL	K65356			; Send to printer
L76130: MOV	#000100, R0		; 40h = '@'
L76134: CALL	K65356			; Send to printer
L76140: MOV	023722, SP
L76144: JMP	K24742
; Subroutine ??
L76150: MOV	R0, -(SP)
L76152: MOV	R5, -(SP)
L76154: MOV	040306, R5
L76160: BEQ	L76166
L76162: ASL	R0
L76164: SOB	R5, L76162
L76166: CALL	K65356			; Send to printer
L76172: MOV	(SP)+, R5
L76174: MOV	(SP)+, R0
L76176: RETURN
; Subroutine ??
L76200: MOV	R3, -(SP)
L76202: MOV	R4, -(SP)
L76204: MOV	R2, -(SP)
L76206: MOV	R3, R1
L76210: BIC	#177770, R1
L76214: ADD	#015070, R1
L76220: CALL	K30060
L76224: MTPS	#000340
L76230: BIS	#000340, 025474
L76236: BIS	#000340, 025500
L76244: BIC	#000140, 025506
L76252: MOV	025506, @#177400	; Memory control MS0515
L76260: MOVB	(R3), R4
L76262: BIS	#000140, 025506
L76270: MOV	025506, @#177400	; Memory control MS0515
L76276: MTPS	#000000
L76302: BIC	#000340, 025474
L76310: BIC	#000340, 025500
L76316: CLR	R0
L76320: BITB	(R1), R4
L76322: BEQ	L76332
L76324: SEC
L76326: ROL	R0
L76330: SOB	R2, L76324
L76332: MOV	(SP)+, R2
L76334: MOV	(SP)+, R4
L76336: MOV	(SP)+, R3
L76340: MOV	R2, R1
L76342: TST	R0
L76344: BEQ	L76412
L76346: MOV	R0, -(SP)
L76350: MOV	R1, -(SP)
L76352: MOV	R2, -(SP)
L76354: MOV	R3, -(SP)
L76356: MOV	R4, -(SP)
L76360: MOV	R5, -(SP)
L76362: CLR	017524
L76366: MOV	#000001, R2
L76372: CALL	K15464
L76376: MOV	(SP)+, R5
L76400: MOV	(SP)+, R4
L76402: MOV	(SP)+, R3
L76404: MOV	(SP)+, R2
L76406: MOV	(SP)+, R1
L76410: MOV	(SP)+, R0
L76412: RETURN
; Subroutine ??
L76414: MOV	R3, -(SP)
L76416: MOV	R4, -(SP)
L76420: MOV	R3, R1
L76422: BIC	#177770, R1
L76426: ADD	#015070, R1
L76432: CALL	K30060
L76436: MTPS	#000340
L76442: BIS	#000340, 025474
L76450: BIS	#000340, 025500
L76456: BIC	#000140, 025506
L76464: MOV	025506, @#177400
L76472: MOVB	(R3)+, R4
L76474: MOVB	(R3), R5
L76476: BIS	#000140, 025506
L76504: MOV	025506, @#177400
L76512: MTPS	#000000
L76516: BIC	#000340, 025474
L76524: BIC	#000340, 025500
L76532: CLR	R0
L76534: BITB	(R1), R4
L76536: BNE	L76546
L76540: ASR	R5
L76542: ASR	R5
L76544: ASR	R5
L76546: BIC	#177770, R5
L76552: ASL	R5
L76554: ASL	R5
L76556: MOV	#037600, R1
L76562: ADD	R5, R1
L76564: MOV	(SP)+, R4
L76566: MOV	(SP)+, R3
L76570: MOVB	(R1), R0
L76572: BR	L76342
L76574: RETURN

	.END
