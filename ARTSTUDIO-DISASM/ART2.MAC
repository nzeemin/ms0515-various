	.TITLE	ART2
	.PSECT

; Overlay #2
; Size of this overlay: 2289. words

; Overlay call
ART20::
L65634:	RETURN
;
; Overlay call
ART21::
L65636: CLR	R0
	BR	L65656
;
L65642: CALL	L66110
	MOV	R5, K20350
	MOV	#177777, R0
L65656: MOV	R0, L66702
	CALL	K54052
	CALL	K26476
	MOV	#000003, R0
	CLR	R3
	MOV	#066706, R2
	CLRB	K25521
	JMP	K61246
;
L65714: MOV	K62374, R3		; get Mouse X
	MOV	K62376, R4		; get Mouse Y
	SUB	#000040, R3
	SUB	#000070, R4
	MOV	R3, R0
	MOV	#177777, R3
L65742: INC	R3
	SUB	#000030, R0
	BHIS	L65742
	ADD	#000030, R0
	CMP	R0, #000020
	BLO	L65766
	RETURN
L65766: MOV	R4, R0
	MOV	#177777, R4
L65774: INC	R4
	SUB	#000030, R0
	BHIS	L65774
	ADD	#000030, R0
	CMP	R0, #000020
	BLO	L66020
	RETURN
L66020: ASL	R4
	ASL	R4
	ASL	R4
	ADD	R3, R4
	INC	R4
	MOV	L66704, R0
	CMP	R0, R4
	BEQ	L66074
	MOV	R4, -(SP)
	CALL	L66372
	MOV	(SP)+, R0
	MOV	R0, L66704
	CALL	L66372
	MOV	#177777, R0
L66066: TST	(R1)
	TST	(R1)
	SOB	R0, L66066
L66074: CALL	K63530
	CALL	K63530
L66104: JMP	@#L66104		;!!!MUT-ARG!!!
;
; Subroutine ??
L66110: MOV	L66704, R5
	DEC	R5
	ASL	R5
	ASL	R5
	ASL	R5
	ADD	#K10330, R5
	MOV	R5, R3
	RETURN
;
; Overlay call
ART22::
L66134: MOV	#L65642, <L66104+2>
	MOV	#L66150, R3		; "заливки:"
	BR	L66172
;
L66150:	.ASCII	/заливки:/
;
; Overlay call
ART23::
L66160: MOV	#L67220, <L66104+2>
	MOV	#L66252, R3		; "экрана :"
;
L66172: MOV	#L66543, R2		; "заливки:"
	MOV	#000010, R1
L66202: MOVB	(R3)+, (R2)+
	SOB	R1, L66202
	MOV	#L66466, R5
	MOV	K65276, 000012(R5)
	MOV	R5, K65276
	MOV	(R5), R3
	MOV	000002(R5), R4
	MOV	000004(R5), R1
	MOV	000006(R5), R2
	CALL	K13264
	JMP	K63646
;
L66252:	.ASCII	/экрана :/
;
L66262: MOV	#K10330, R5
	MOV	#000037, R3
	MOV	#000067, R4
	MOV	#000004, R1
L66302: MOV	R1, -(SP)
	MOV	#000010, R1
L66310: MOV	R1, -(SP)
	MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	#000022, R1
	MOV	#000022, R2
	CALL	K17276
	CALL	K17720
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	ADD	#000030, R3
	MOV	(SP)+, R1
	SOB	R1, L66310
	MOV	#000037, R3
	ADD	#000030, R4
	MOV	(SP)+, R1
	SOB	R1, L66302
	MOV	L66704, R0
; Entry point
L66372: DEC	R0
	MOV	R0, R3
	BIC	#177770, R3
	ASL	R3
	ASL	R3
	ASL	R3
	MOV	R3, R1
	ASL	R3
	ADD	R1, R3
	ADD	#000037, R3
	MOV	R0, R4
	BIC	#000007, R4
	MOV	R4, R1
	ASL	R4
	ADD	R1, R4
	ADD	#000067, R4
	MOVB	#000003, K25521
	DEC	R3
	DEC	R4
	MOV	#000024, R1
	MOV	R1, R2
	JMP	K17410
;
L66466:	.WORD	000020, 000040, 000330, 000200, 034340, 000000, L66262, 000000
	.WORD	000000, 000330, 000200, 000000, 004000, 004027
	.BYTE	010
	.ASCII	/Выбери текстуру /
L66543:	.ASCII	/заливки:/
	.EVEN
L66554:
	.WORD	000017, 000027, 000272, 000132, 065714, 004000, 000000, 177777
;
; Overlay call
ART24::
L66574: CALL	L66110
	MOV	#000100, R4
	MOV	#000230, R3
	MOV	#000010, R1
	MOV	R1, R2
	CALL	K14240
	BR	L66662
;
; Overlay call
ART25::
L66624: CALL	K63530
	JMP	L65642
;
; Overlay call
ART26::
L66634: CALL	L66110
	MOV	#000100, R4
	MOV	#000230, R3
	MOV	#000010, R1
	MOV	R1, R2
	CALL	K14060
L66662: CALL	L66110
	MOV	#000207, R4
	MOV	#000257, R3
	JMP	K17720
;
L66702: .WORD	000000
L66704:	.WORD	000001
;
L66706: MOV	K30532, R0
	ASL	R0
	ASL	R0
	ASL	R0
	NEG	R0
	DEC	R0
	MOV	R0, <L70776+2>
	ADD	#000340, R0
	MOV	R0, <L71044+2>
	MOV	K62374, R3		; get Mouse X
	MOV	K62376, R4		; get Mouse Y
	MOV	R3, R1
	BIC	#177770, R1
	INC	R1
	CALL	K27752
	CALL	K20352
L66770: ROLB	R0
	SOB	R1, L66770
	BHIS	L67000
	RETURN
L67000: CALL	K42334
	MOV	K30536, R5
	CLR	(R5)+
	MOV	K62374, R3		; get Mouse X
	MOV	K62376, R4		; get Mouse Y
	TST	R3
	BNE	L67030
	INC	R3
L67030: MOV	#000001, R0
	CLR	R1
	MOV	#000200, R2
	CALL	L71110
	MTPS	#000340
L67052: CALL	L67240
	BLO	L67064
	JMP	L67212
L67064: SUB	#000010, R5
	TST	000006(R5)
	BEQ	L67200
	MOV	(R5), R3
	MOV	000002(R5), R4
	MOV	000004(R5), R1
	MOV	000006(R5), R2
	BIC	#177760, R2
	BIT	#000010, R2
	BEQ	L67132
	BIS	#000360, R2
L67132: CLR	R0
	BIT	#000200, 000006(R5)
	BNE	L67146
	DEC	R0
L67146: MOV	R0, L71170
	MOV	#000001, R0
	BIT	#000100, 000006(R5)
	BEQ	L67172
	MOV	#177777, R0
L67172: CALL	L67244
	BR	L67052
L67200: TST	L66702
	BEQ	L67212
L67206: CALL	K20032
; Entry point
L67212: MTPS	#000000
	RETURN
L67220: CALL	L66110
	MOV	R5, K20350
	CALL	K54052
	JMP	L67206
;
; Subroutine ??
L67240: SEC
	RETURN
;
; Subroutine ??
L67244: MOV	R0, L71162
	MOV	R3, K12042
	MOV	R4, K12044
	MOV	R1, L71164
	MOV	R2, L71166
	CLR	R2
; Entry point
L67272: MOV	R3, -(SP)
	MOV	R4, -(SP)
	CALL	K27752
	CALL	K20352
	MOV	R0, L71172
	MOVB	R0, K25520
	MOVB	#000010, K25521
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	MOV	R3, R0
	TST	L71162
	BMI	L67350
	BIC	#177770, R0
	BEQ	L67404
	BR	L67364
L67350: BIC	#177770, R0
	NEG	R0
	ADD	#000007, R0
	BEQ	L67404
L67364: MOV	#177777, R2
L67370: MOV	R0, -(SP)
	CALL	L70110
	MOV	(SP)+, R0
	SOB	R0, L67370
	CLR	R2
L67404: MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	R1, -(SP)
	MOV	R2, -(SP)
	MOV	R1, R0
	DEC	R0
	CMP	R0, #000010
	BLO	L67432
	MOV	#000010, R1
L67432: TST	L71162
	BPL	L67470
	MOV	R3, R0
	BIC	#177770, R0
	INC	R0
	SUB	R1, R0
	BHIS	L67460
	ADD	R1, R0
	MOV	R0, R1
L67460: MOV	R3, R0
	INC	R0
	SUB	R1, R0
	MOV	R0, R3
L67470: BIC	#177770, R3
	ASL	R3
	MOV	R1, R0
	DEC	R0
	ASL	R0
	ASL	R0
	ASL	R0
	ASL	R0
	ADD	R0, R3
	ADD	#K11622, R3
	INC	R3
	CLR	R1
	BISB	(R3), R1
	MOV	L71172, R0
	BICB	R1, R0
	CMPB	R0, R1
	MFPS	<K23720+2>
	MOV	(SP)+, R2
	MOV	(SP)+, R1
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	MOV	R0, -(SP)
	TST	L71170
	BNE	L67660
	MTPS	<K23720+2>
	BEQ	L67652
	MOV	L71162, R0
	BMI	L67606
	BITB	#000200, K25520
	BR	L67614
L67606: BITB	#000001, K25520
L67614: BNE	L67652
	MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	R1, -(SP)
	MOV	R2, -(SP)
	CLR	R1
	CLR	R2
	NEG	R0
	ADD	R0, R3
	CALL	L71110
	MOV	(SP)+, R2
	MOV	(SP)+, R1
	MOV	(SP)+, R4
	MOV	(SP)+, R3
L67652: MOV	#177777, L71170
L67660:	MOVB	K25520, R0
	BNE	L67756
	MOVB	K25521, R0
	CMPB	R0, #000010
	BNE	L67756
	MOV	R2, R0
	DEC	R0
	BEQ	L67726
	CALL	L70510
	MOV	R3, K12042
	MOV	R4, K12044
	MOV	#000001, R2
L67726: MOV	R3, -(SP)
	CALL	K27752
	CALL	K20406
	MOV	(SP)+, R3
	SUB	#000010, R1
	BHIS	L67752
	CLR	R1
L67752: MOV	(SP)+, R0
	BR	L70062
L67756: MOV	(SP)+, R0
	MTPS	<K23720+2>
	BNE	L70024
	MOV	R2, R0
	BEQ	L70004
	CALL	L70510
	CALL	L70602
	CLR	R2
L70004: MOVB	K25521, R0
	SUB	R0, R1
	BHIS	L70016
	RETURN
L70016: BNE	L70022
	RETURN
L70022: BR	L70062
L70024: CALL	L70110
	BNE	L70024
	MOV	R3, -(SP)
	CALL	K27752
	CALL	K25354
	CALL	K20430
	MOV	(SP)+, R3
	MOV	R2, R0
	INC	R0
	BNE	L70062
	RETURN
L70062: CALL	L70544
	BLO	L70074
	JMP	L67272
L70074: MOV	R2, R0
	DEC	R0
	BNE	L70106
	JMP	L70602
L70106: RETURN
;
; Subroutine ??
L70110: TST	L71162
	BPL	L70122
	JMP	L70336
L70122: MOV	R2, R0
	INC	R0
	BNE	L70152
	CALL	K25354
	ASLB	K25520
	SEC
	ROLB	R0
	CALL	K25354
	BR	L70330
L70152: DEC	R0
	BNE	L70230
	CALL	K25354
	ASLB	K25520
	BHIS	L70200
	ROLB	R0
	CALL	K25354
	BR	L70272
L70200: ROLB	R0
	CALL	K25354
	CALL	L70510
	MOV	R3, K12042
	MOV	R4, K12044
	MOV	#000001, R2
	BR	L70322
L70230: CALL	K25354
	ASLB	K25520
	BLO	L70252
	ROLB	R0
	CALL	K25354
	BR	L70322
L70252: ROLB	R0
	CALL	K25354
	CALL	L70510
	CALL	L70602
	CLR	R2
L70272: CLR	R0
	MOV	R0, L71164
	MOV	R1, R0
	DEC	R1
	CMP	R0, #000002
	BHIS	L70330
	MOV	#177777, R2
	CLR	R1
	BR	L70330
L70322: TST	R1
	BEQ	L70330
	DEC	R1
L70330: DECB	K25521
	RETURN
; Entry point
L70336: MOV	R2, R0
	INC	R0
	BNE	L70366
	CALL	K25354
	ASRB	K25520
	SEC
	RORB	R0
	CALL	K25354
	BR	L70330
L70366: DEC	R0
	BNE	L70444
	CALL	K25354
	ASRB	K25520
	BHIS	L70414
	RORB	R0
	CALL	K25354
	BR	L70272
L70414: RORB	R0
	CALL	K25354
	CALL	L70510
	MOV	R3, K12042
	MOV	R4, K12044
	MOV	#000001, R2
	BR	L70322
L70444: CALL	K25354
	ASRB	K25520
	BLO	L70466
	RORB	R0
	CALL	K25354
	BR	L70322
L70466: RORB	R0
	CALL	K25354
	CALL	L70510
	CALL	L70602
	CLR	R2
	BR	L70272
; Entry point
L70510: BIC	#000007, R3
	MOVB	K25521, R0
	TST	L71162
	BMI	L70536
	ADD	#000010, R3
	SUB	R0, R3
	RETURN
L70536: ADD	R0, R3
	DEC	R3
	RETURN
;
; Subroutine ??
L70544: TST	L71162
	BMI	L70570
	BIC	#000007, R3
	ADD	#000010, R3
	CMP	#000477, R3
	RETURN
L70570: BIS	#000007, R3
	SUB	#000010, R3
	RETURN
;
; Subroutine ??
L70602: MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	R1, -(SP)
	MOV	R2, -(SP)
	MOV	R3, R1
	MOV	R4, R2
	MOV	K12042, R3
	MOV	K12044, R4
	TST	L71162
	BMI	L70642
	MOV	R1, R0
	SUB	R3, R0
	BR	L70646
L70642: MOV	R3, R0
	SUB	R1, R0
L70646: BEQ	L70740
	MOV	(SP)+, R2
	MOV	(SP)+, R1
	MOV	R1, -(SP)
	MOV	R2, -(SP)
	MOV	R1, R2
	MOV	R0, R1
	TST	L71166
	BEQ	L70730
	TST	R2
	BNE	L70712
	MOV	L71164, R0
	TST	R0
	BEQ	L70730
	CMP	R0, R1
	BNE	L70730
L70712: MOV	L71166, R0
	DEC	R0
	BEQ	L70734
	CALL	L70752
	BR	L70740
L70730: CALL	L70752
L70734: CALL	L71036
L70740: MOV	(SP)+, R2
	MOV	(SP)+, R1
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	RETURN
;
; Subroutine ??
L70752: MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	R4, R0
	CMP	R0, #000030
	BEQ	L71030
	CMP	R0, #000340
	BLO	L71004
L70774: DEC	R0
L70776:	CMP	R0, #177747		;!!!MUT-ARG!!!
	BEQ	L71022
L71004: DEC	R4
	MOV	L71162, R0
	MOV	#177777, R2
	CALL	L71110
L71022: MOV	(SP)+, R4
	MOV	(SP)+, R3
	RETURN
L71030: CLR	R0
	MOV	R0, R4
	BR	L70774
;
; Subroutine ??
L71036: MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	R4, R0
L71044:	CMP	R0, #000337		;!!!MUT-ARG!!!
	BEQ	L71102
	CMP	R0, #177777
	BNE	L71064
	MOV	#000027, R4
L71064: INC	R4
	MOV	L71162, R0
	MOV	#000201, R2
	CALL	L71110
L71102: MOV	(SP)+, R4
	MOV	(SP)+, R3
	RETURN
;
; Subroutine ??
L71110: MOV	R2, -(SP)
	MOV	R3, (R5)+
	MOV	R4, (R5)+
	MOV	R1, (R5)+
	ASL	R0
	ASL	R0
	ASL	R0
	ASL	R0
	BIC	#177617, R0
	BIC	#177560, R2
	BIS	R0, R2
	MOV	R2, (R5)+
	CMP	#140000, R5
	BHIS	L71156
	SUB	#000010, R5
L71156: MOV	(SP)+, R2
	RETURN
;
L71162: .WORD	0
L71164: .WORD	0
L71166: .WORD	0
L71170: .WORD	0
L71172: .WORD	0
;
; Overlay call
ART27::
L71174: TST	K53066
	BNE	L71212
	TST	K53070
	BNE	L71212
	RETURN
L71212: CLR	K53066
	CLR	K53070
	CALL	K21254
; Entry point
L71226: MOV	K53106, R3
	MOV	K53110, R4
	MOV	K53112, R1
	MOV	K53114, R2
	CALL	K13644
	MOV	K53116, R3
	MOV	K53120, R4
	MOV	K53122, R1
	MOV	K53124, R2
	CALL	K13644
	CALL	L72076
	JMP	L72222
;
; Overlay call
ART28::
L71306: MOV	#L71316, R3
	JMP	L71702
L71316: MOV	K53066, R3
	MOV	K53072, R1
	TST	R3
	BNE	L71334
	RETURN
L71334: MOV	R1, R0
	CALL	L72010
	NEG	R0
	ADD	R3, R0
	BLO	L71352
	CLR	R0
L71352: MOV	R0, R3
	BR	L71444
;
; Overlay call
ART29::
L71356: MOV	#L71366, R3
	JMP	L71702
L71366: MOV	K53066, R3
	MOV	K53072, R1
	MOV	R3, R0
	ADD	R1, R0
	CMP	R0, #000500
	BNE	L71412
	RETURN
L71412: MOV	R1, R0
	CALL	L72010
	ADD	R3, R0
	MOV	R0, R3
	ADD	R1, R0
	CMP	R0, #000500
	BLO	L71444
	MOV	#000500, R0
	SUB	R1, R0
	MOV	R0, R3
L71444: MOV	R3, K53066
	CALL	K21254
	MOV	K53106, R3
	MOV	K53110, R4
	MOV	K53112, R1
	MOV	K53114, R2
	CALL	K13644
	JMP	L72076
;
; Overlay call
ART30::
L71504: MOV	#L71514, R3
	JMP	L71702
L71514: MOV	K53070, R4
	MOV	K53074, R2
	TST	R4
	BNE	L71532
	RETURN
L71532: MOV	R2, R0
	CALL	L72010
	NEG	R0
	ADD	R4, R0
	BLO	L71550
	CLR	R0
L71550: MOVB	R0, R4
	BR	L71642
;
; Overlay call
ART31::
L71554: MOV	#L71564, R3
	JMP	L71702
L71564: MOV	K53070, R4
	MOV	K53074, R2
	MOV	R4, R0
	ADD	R2, R0
	CMP	R0, #000310
	BNE	L71610
	RETURN
L71610: MOV	R2, R0
	CALL	L72010
	ADD	R4, R0
	MOV	R0, R4
	ADD	R2, R0
	CMP	R0, #000310
	BLO	L71642
	MOV	#000310, R0
	SUB	R2, R0
	MOV	R0, R4
L71642: MOV	R4, K53070
	CALL	K21254
	MOV	K53116, R3
	MOV	K53120, R4
	MOV	K53122, R1
	MOV	K53124, R2
	CALL	K13644
	JMP	L72222
; Entry point
L71702: MOV	R3, -(SP)
	CALL	(R3)
	MOV	(SP)+, R3
	MOVB	#000024, K25521
	CALL	K25244			; EXX
L71722: CALL	L72050
	CALL	K12054
	CALL	K25244			; EXX
L71736: NOP
	DECB	K25521
	BNE	L71736
	MOVB	#000005, K25521
	CALL	K25244			; EXX
	CALL	K13110
	CALL	L72050
	CALL	K25244			; EXX
	MOV	R3, -(SP)
	CALL	K25244			; EXX
	MOV	(SP)+, R3
	CALL	(R3)
	BR	L71722
;
; Subroutine ??
L72010: ASR	R0
	ASR	R0
	CMP	K23120, #000002
	BNE	L72032
	BIC	#000003, R0
	RETURN
L72032: CMP	K23120, #000004
	BNE	L72046
	BIC	#000001, R0
L72046: RETURN
;
; Subroutine ??
L72050: CALL	K45776			; Read input and set input bits
	MOV	K46222, R0		; get input bits
	BIT	#000020, R0
	BEQ	L72070
	RETURN
L72070: MOV	(SP)+, R3
	RETURN
L72074: JMP	(R3)
;
; Subroutine ??
L72076: MOV	K53066, R1
	MOV	#000334, R0
	CALL	L72412
	MOV	#000500, R0
	CALL	L72344
	MOV	R0, R3
	ADD	#000030, R3
	MOV	#000020, R4
	MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	K53072, R1
	MOV	#000334, R0
	CALL	L72412
	MOV	#000500, R0
	CALL	L72344
	MOV	R0, R1
	MOV	#000015, R2
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	MOV	R3, K53106
	MOV	R4, K53110
	MOV	R1, K53112
	MOV	R2, K53114
	JMP	K13644
;
; Subroutine ??
L72222: MOV	K53070, R1
	MOV	#000214, R0
	CALL	L72412
	MOV	#000310, R0
	CALL	L72344
	ADD	#000050, R0
	MOV	R0, R4
	CLR	R3
	MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	K53074, R1
	MOV	#000214, R0
	CALL	L72412
	MOV	#000310, R0
	CALL	L72344
	MOV	R0, R2
	MOV	#000015, R1
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	MOV	R3, K53116
	MOV	R4, K53120
	MOV	R1, K53122
	MOV	R2, K53124
	JMP	K13644
;
; Subroutine ??
L72344: TST	R0
	BNE	L72354
	MOV	R3, R0
	RETURN
L72354: MOV	R1, -(SP)
	MOV	R0, R1
	MOV	#177777, R0
L72364: INC	R0
	SUB	R1, R3
	SBC	R2
	BHIS	L72364
	ADD	R1, R3
	ASL	R3
	SUB	R1, R3
	BLO	L72406
	INC	R0
L72406: MOV	(SP)+, R1
	RETURN
;
; Subroutine ??
L72412: CLR	R3
	CLR	R2
	MOV	#000010, R5
L72422: ROR	R0
	BHIS	L72432
	ADD	R1, R3
	ADC	R2
L72432: ASL	R1
	SOB	R5, L72422
	RETURN
;
; Overlay call
ART32::
L72440: MOVB	K25521, R0
	INC	R0
	ASL	R0
	CMP	R0, #000005
	BLO	L72462
	ADD	#000002, R0
L72462: MOV	R0, K53054
	MOVB	R0, K25521
	MOV	K23120, R0
	CMPB	R0, K25521
	BNE	L72506
	RETURN
L72506: CALL	L72634
	MOV	K62374, R3		; get Mouse X
	MOV	K62376, R4		; get Mouse Y
	MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	K53076, R3
	MOV	K53100, R4
	MOV	K53102, R1
	MOV	K53104, R2
	ASR	R1
	ASR	R2
	ADD	R1, R3
	ADD	R2, R4
	MOV	R3, K62374		; set Mouse X
	MOV	R4, K62376		; set Mouse Y
	MOV	K53054, R0
	CALL	L74322
	MOV	(SP)+, R3
	MOV	(SP)+, R4
	MOV	R3, K62374		; set Mouse X
	MOV	R4, K62376		; set Mouse Y
	CLR	R0
	MOV	R0, K23122
	CALL	K21254
	CALL	L71226
	MOV	K23120, R0
; Entry point
L72634: MOV	#000001, R3
	MOV	#000003, R4
	MOV	#000022, R1
	MOV	#000012, R2
	CMP	R0, #000002
	BEQ	L72700
	MOV	#000024, R3
	CMP	R0, #000004
	BEQ	L72700
	MOV	#000047, R3
L72700: JMP	K13644
;
; Overlay call
ART33::
L72704: MOVB	K25521, R0
	SUB	#000003, R0
	MOV	R0, K53060
	MOVB	R0, K25521
	MOV	K53056, R0
	CMPB	R0, K25521
	BNE	L72740
	RETURN
L72740: CALL	L72754
	MOV	K53060, R0
	MOV	R0, K53056
; Entry point
L72754: MOV	#000145, R3
	MOV	#000003, R4
	MOV	#000031, R1
	MOV	#000012, R2
	TST	R0
	BEQ	L73024
	MOV	#000176, R3
	MOV	#000052, R1
	DEC	R0
	BEQ	L73024
	MOV	#000251, R3
	MOV	#000061, R1
L73024: JMP	K13644
;
; Overlay call
; Выбрано увеличение x2 / x4 / x8
ART34::
L73030: MOVB	K25521, R0
	INC	R0
	ASL	R0
	CMP	R0, #000005
	BLO	L73052
	ADD	#000002, R0
L73052: MOV	R0, K53054
	CALL	K54052
	CALL	K26476
	MOV	#000004, R0
	CLR	R3
	MOV	#L73104, R2
	JMP	K61246
;
L73104: MOV	#000001, R0
	CALL	K42704
	MOV	#052456, R5
	CALL	K63646
	MOV	K53054, R0
	CALL	L74322
	CLR	K23122
	CALL	K21254
	CALL	L72076
	CALL	L72222
	MOV	K23120, R0
	CALL	L72634
	MOV	K53056, R0
	CALL	L72754
; Entry point
L73174: MOV	#177777, K53062
	MOV	#177777, K53064
	MOV	#000002, R0
	CALL	K62000
	CALL	K12054
	CALL	K61754			; Clean input buffer
L73230: CALL	K45776			; Read input and set input bits
	MOV	K46222, R0		; get input bits
	BIT	#000020, R0
	BNE	L73310
	MOV	#177777, K53062
	MOV	#177777, K53064
L73262: CALL	K62036			; Process input bits into X/Y change
L73266: NOP
	CALL	K13110
	CALL	L73536
	BNE	L73370
	CALL	K12054
	BR	L73230
L73310: CALL	L74740
	MOV	K53062, R1
	MOV	K53064, R2
	SUB	R1, R3
	BNE	L73334
	SUB	R2, R4
	BEQ	L73262
L73334: NOP
	CALL	K13110
	CALL	K42334
	CALL	L73622
	MOV	R3, K53062
	MOV	R4, K53064
	CALL	K12054
	BR	L73262
L73370: CLR	R0
	CALL	K62000
L73376: CALL	K12054
	CALL	K61754			; Clean input buffer
L73406: CALL	K45776			; Read input and set input bits
	MOV	K46222, R0		; get input bits
	BIT	#000020, R0
	BNE	L73476
	CALL	K62036			; Process input bits into X/Y change
L73430: NOP
	CALL	K61706
	CALL	K13110
	CMP	K65276, #052456
	BNE	L73464
	CALL	L73536
	BNE	L73464
	JMP	L73174
L73464: CALL	K12054
	CALL	K62414
	BR	L73406
L73476: CALL	K61700
	CALL	K13110
	CALL	K62652
	CMP	K65276, #052456
	BNE	L73376
	CALL	L73536
	BNE	L73534
	JMP	L73174
L73534: BR	L73376
;
; Subroutine ??
L73536: MOV	K53076, R3
	MOV	K53100, R4
	MOV	K53102, R1
	MOV	K53104, R2
	DEC	R3
	DEC	R4
	INC	R1
	INC	R1
	INC	R2
	INC	R2
	JMP	K63554
;
; Overlay call
; Выбрано "Сетка" в меню "Увелич."
ART35::
L73576: COM	K23124
;
; Overlay call
ART36::
L73602: MOV	K23124, R0
	MOV	#000202, R3
	MOV	#000102, R4
	JMP	K17154
;
; Subroutine ??
L73622: CALL	L74740
	BHIS	L73632
	RETURN
L73632: MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	R3, R0
	BIC	#177770, R0
	MOV	R0, -(SP)
	CALL	K30060
	MOV	#000200, R5
	MOV	(SP)+, R0
	BEQ	L73666
L73662: ASR	R5
	SOB	R0, L73662
L73666: MTPS	#000340
	BIS	#000340, K25474
	BIS	#000340, K25500
	BIC	#000140, K25506
	MOV	K25506, @#177400
	MOVB	(R3), R4
	MOV	K53056, R0
	BNE	L73736
	BISB	R5, (R3)
	BR	L73750
L73736: DEC	R0
	BNE	L73746
	BICB	R5, (R3)
	BR	L73750
L73746: XOR	R5, (R3)
L73750: BITB	R5, (R3)
	MFPS	<K23720+2>
	CMPB	R4, (R3)+
	CALL	K25354
	CALL	K22642
	BIS	#000140, K25506
	MOV	K25506, @#177400
	MTPS	#000000
	BIC	#000340, K25474
	BIC	#000340, K25500
	MOV	R0, K23126
	MOV	K62374, R3		; get Mouse X
	MOV	K62376, R4		; get Mouse Y
	CMP	K23120, #000002
	BNE	L74146
	CALL	K25354
	BEQ	L74144
	BIC	#000001, R3
	BIC	#000001, R4
	MOV	R3, R0
	BIC	#177770, R0
	CALL	K27752
	MOV	#000300, R5
	ASR	R0
	BEQ	L74134
	MOV	#000060, R5
	DEC	R0
	BEQ	L74134
	MOV	#000014, R5
	DEC	R0
	BEQ	L74134
	MOV	#000003, R5
L74134: MOV	K23126, R0
	CALL	K22726
L74144: BR	L74312
L74146: CMP	K23120, #000004
	BNE	L74232
	CALL	K25354
	BEQ	L74312
	BIC	#000003, R3
	BIC	#000003, R4
	MOV	R3, R0
	BIC	#177770, R0
	CALL	K27752
	MOV	#000360, R5
	TST	R0
	BEQ	L74220
	COMB	R5
L74220: MOV	K23126, R0
	CALL	K23000
	BR	L74312
L74232: CALL	K25354
	BEQ	L74312
	BIC	#000007, R3
	BIC	#000007, R4
	CALL	K27752
	INC	R3
	MOV	K23126, R0
	COM	<K23720+2>
	ASR	<K23720+2>
	ASR	<K23720+2>
	ASR	<K23720+2>
	CALL	K23130
	CALL	K23052
L74312: MOV	(SP)+, R4
	MOV	(SP)+, R3
	TST	R0
	RETURN
;
; Subroutine ??
L74322: CALL	K25354
	MOV	K23120, R0
	DEC	R0
	BNE	L74370
	MOV	K30532, R0
	ASL	R0
	ASL	R0
	ASL	R0
	SUB	#000030, R0
	MOV	K62374, R3		; get Mouse X
	MOV	K62376, R4		; get Mouse Y
	ADD	R0, R4
	BR	L74400
L74370: CALL	L74740
	BHIS	L74400
	RETURN
L74400: CALL	K25354
	MOV	R0, K23120
	MOV	K53102, R1
	MOV	K53104, R2
	MOV	R1, R0
	CALL	L75074
	MOV	R5, R1
	MOV	R2, R0
	CALL	L75074
	MOV	R5, R2
	MOV	R1, K53072
	MOV	R2, K53074
	MOV	R1, R0
	ASR	R0
	NEG	R0
	ADD	R3, R0
	BLO	L74464
	CLR	R0
L74464: CALL	L74702
	MOV	R0, K25522
	ADD	R1, R0
	CMP	R0, #000500
	BLO	L74516
	SUB	#000500, R0
	NEG	R0
	ADD	R0, K25522
L74516: MOV	R2, R0
	ASR	R0
	NEG	R0
	ADD	R4, R0
	BLO	L74532
	CLR	R0
L74532: CALL	L74702
	MOV	R0, K25524
	ADD	R2, R0
	BLO	L74554
	CMP	R0, #000310
	BLO	L74566
L74554: SUB	#000310, R0
	NEG	R0
	ADD	R0, K25524
L74566: MOV	K25522, K53066
	MOV	K25524, K53070
	SUB	K25522, R3
	SUB	K25524, R4
	MOV	R3, R0
	CALL	L75120
	MOV	R0, R3
	MOV	K23120, R0
	ASR	R0
	ADD	R0, R3
	MOV	R4, R0
	CALL	L75120
	MOV	R0, R4
	MOV	K23120, R0
	ASR	R0
	ADD	R0, R4
	MOV	K53076, R1
	MOV	K53100, R2
	ADD	R1, R3
	ADD	R2, R4
	MOV	R3, K62374		; set Mouse X
	MOV	R4, K62376		; set Mouse Y
	TST	R0
	RETURN
;
; Subroutine ??
L74702: CMP	K23120, #000002
	BNE	L74720
	BIC	#000003, R0
	RETURN
L74720: CMP	K23120, #000004
	BEQ	L74732
	RETURN
L74732: BIC	#000001, R0
	RETURN
;
; Subroutine ??
L74740: MOV	K53076, R3
	MOV	K53100, R4
	MOV	K53102, R1
	MOV	K53104, R2
	MOV	K62374, R0		; get Mouse X
	SUB	R3, R0
	BHIS	L74772
	RETURN
L74772: MOV	R0, R3
	MOV	R1, R0
	DEC	R0
	CMP	R0, R3
	BHIS	L75006
	RETURN
L75006: MOV	K62376, R0		; get Mouse Y
	SUB	R4, R0
	BHIS	L75020
	RETURN
L75020: MOV	R0, R4
	MOV	R2, R0
	DEC	R0
	CMP	R0, R4
	BHIS	L75034
	RETURN
L75034: MOV	R3, R0
	CALL	L75074
	MOV	R5, R3
	MOV	R4, R0
	CALL	L75074
	MOV	R5, R4
	MOV	K53066, R1
	MOV	K53070, R2
	ADD	R1, R3
	ADD	R2, R4
	TST	R0
	RETURN
;
; Subroutine ??
L75074: MOV	R1, -(SP)
	MOV	K23120, R1
	MOV	#177777, R5
L75106: INC	R5
	SUB	R1, R0
	BHIS	L75106
	MOV	(SP)+, R1
	RETURN
;
; Subroutine ??
L75120: MOV	R1, -(SP)
	MOV	R5, -(SP)
	MOV	R0, R1
	MOV	K23120, R5
	CLR	R0
L75134: ADD	R1, R0
	SOB	R5, L75134
	MOV	(SP)+, R5
	MOV	(SP)+, R1
	RETURN
L75146: MOV	#177777, R0
	BR	L75156
L75154: CLR	R0
L75156: MOV	R0, K60502
	CLR	K56110
	CALL	K54052
	MOV	K56146, R3
	MOV	K56150, R3
	MOV	K56152, R1
	MOV	K56154, R2
	CALL	K60404
	MOV	K56116, K60472
	MOV	K56120, K60474
	MOV	K56122, K60476
	MOV	K56124, K60500
	MOV	#177777, K56114
	CALL	K54134
	CLR	K56106
	CALL	K53126
	CALL	K54052
	CALL	K26476
	MOV	K60502, R0
	TST	R0
	BEQ	L75314
	CALL	K54564
L75314: MOV	K56146, R3
	MOV	K56150, R4
	MOV	K56152, R1
	MOV	K56154, R2
	CALL	K60404
	MOV	K30536, R3
;
; Overlay call
ART37::
L75344: RETURN

; Overlay call
; Выбран один из пяти пунктов "Вывод N x N" в меню "Печать", N = 1..5
ART38::
L75346: MOV	#000002, R0
	CALL	K42704
	MOVB	K25521, R0
	INC	R0
	BR	L75370

; Overlay call
; Выбрано "Вывод  полутон." в меню "Печать"
ART39::
L75366: CLR	R0
L75370: MOV	R0, -(SP)
	CALL	K54052
	CALL	K26476
	MOV	#034000, R0
	CALL	K25024
	MOV	(SP)+, R0
	MOV	SP, <K23720+2>
	MOV	R0, -(SP)
	CALL	K37642
	INC	040306
	BIC	#177774, 040306
	CLR	K25514
	MOV	#000033, R0		; 1Bh
	CALL	K65356			; Send to printer
	MOV	#000100, R0		; 40h = '@'
	CALL	K65356			; Send to printer
	MOV	#000033, R0		; 1Bh
	CALL	K65356			; Send to printer
	MOV	#000063, R0		; 33h
	CALL	K65356			; Send to printer
	MOV	#000003, R0
	TST	040276
	BEQ	L75520
	DEC	R0
L75520: MOV	(SP)+, R2
	MOV	R2, -(SP)
	BNE	L75532
	MOV	#000003, R2
L75532: CLR	-(SP)
L75534: ADD	R0, (SP)
	SOB	R2, L75534
	MOV	(SP)+, R0
	CALL	K65356			; Send to printer
	CLR	R3
	CLR	R4
	TST	040300
	BEQ	L75564
	MOV	#000307, R4
L75564: MOV	(SP)+, R2
; Entry point
L75566: TST	K25514
	BEQ	L75600
	JMP	L76114
L75600: MOV	040272, R1
	BEQ	L75620
L75606: MOV	#000040, R0		; 20h = space
	CALL	K65356			; Send to printer
	SOB	R1, L75606
L75620: MOV	#000033, R0		; 1Bh
	CALL	K65356			; Send to printer
	MOV	#000113, R0
	TST	040276
	BEQ	L75644
	INC	R0
L75644: CALL	K65356			; Send to printer
	CLR	R0
	BISB	040274, R0
	CALL	K65356			; Send to printer
	CLR	R0
	BISB	040275, R0
	CALL	K65356			; Send to printer
L75674: MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	R2, -(SP)
	BEQ	L75720
	CALL	L76200
L75710: CALL	L76150
	SOB	R1, L75710
	BR	L75746
L75720: CALL	L76414
	MOVB	(R1)+, R0
	CALL	L76150
	MOVB	(R1)+, R0
	CALL	L76150
	MOVB	(R1)+, R0
	CALL	L76150
L75746: TST	040300
	BNE	L75776
	INC	R3
	CMP	#000500, R3		; 320.
	BEQ	L76014
	MOV	(SP)+, R2
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	INC	R3
	BR	L75674
L75776: TST	R4
	BEQ	L76014
	MOV	(SP)+, R2
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	DEC	R4
	BR	L75674
;
L76014: MOV	(SP)+, R2
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	MOV	#000015, R0		; 0Dh
	CALL	K65356			; Send to printer
	MOVB	#000012, R0		; 0Ah
	TST	040304
	BEQ	L76050
	CALL	K65356			; Send to printer
L76050: TST	040300
	BNE	L76074
	CLR	R3
	INC	R4
	CMP	R4, #000310
	BHIS	L76114
	JMP	L75566
L76074: MOV	#000307, R4
	INC	R3
	CMP	R3, #000500		; 320.
	BHIS	L76114
	JMP	L75566
; Entry point
L76114: CLR	K25514
	MOV	#000033, R0		; 1Bh
	CALL	K65356			; Send to printer
	MOV	#000100, R0		; 40h = '@'
	CALL	K65356			; Send to printer
	MOV	<K23720+2>, SP
	JMP	K24742
;
; Subroutine ??
L76150: MOV	R0, -(SP)
	MOV	R5, -(SP)
	MOV	040306, R5
	BEQ	L76166
L76162: ASL	R0
	SOB	R5, L76162
L76166: CALL	K65356			; Send to printer
	MOV	(SP)+, R5
	MOV	(SP)+, R0
	RETURN
;
; Subroutine ??
L76200: MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	R2, -(SP)
	MOV	R3, R1
	BIC	#177770, R1
	ADD	#K15070, R1
	CALL	K30060
	MTPS	#000340
	BIS	#000340, K25474
	BIS	#000340, K25500
	BIC	#000140, K25506
	MOV	K25506, @#177400	; Memory control MS0515
	MOVB	(R3), R4
	BIS	#000140, K25506
	MOV	K25506, @#177400	; Memory control MS0515
	MTPS	#000000
	BIC	#000340, K25474
	BIC	#000340, K25500
	CLR	R0
	BITB	(R1), R4
	BEQ	L76332
L76324: SEC
	ROL	R0
	SOB	R2, L76324
L76332: MOV	(SP)+, R2
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	MOV	R2, R1
L76342: TST	R0
	BEQ	L76412
	MOV	R0, -(SP)
	MOV	R1, -(SP)
	MOV	R2, -(SP)
	MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	R5, -(SP)
	CLR	K17524
	MOV	#000001, R2
	CALL	K15464
	MOV	(SP)+, R5
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	MOV	(SP)+, R2
	MOV	(SP)+, R1
	MOV	(SP)+, R0
L76412: RETURN
;
; Subroutine ??
L76414: MOV	R3, -(SP)
	MOV	R4, -(SP)
	MOV	R3, R1
	BIC	#177770, R1
	ADD	#K15070, R1
	CALL	K30060
	MTPS	#000340
	BIS	#000340, K25474
	BIS	#000340, K25500
	BIC	#000140, K25506
	MOV	K25506, @#177400
	MOVB	(R3)+, R4
	MOVB	(R3), R5
	BIS	#000140, K25506
	MOV	K25506, @#177400
	MTPS	#000000
	BIC	#000340, K25474
	BIC	#000340, K25500
	CLR	R0
	BITB	(R1), R4
	BNE	L76546
	ASR	R5
	ASR	R5
	ASR	R5
L76546: BIC	#177770, R5
	ASL	R5
	ASL	R5
	MOV	#037600, R1
	ADD	R5, R1
	MOV	(SP)+, R4
	MOV	(SP)+, R3
	MOVB	(R1), R0
	BR	L76342
L76574: RETURN

	.END
